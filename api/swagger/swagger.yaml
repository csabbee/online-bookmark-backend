swagger: "2.0"
info:
  version: "0.0.1"
  title: Online Bookmark
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grad
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /lists:
    x-swagger-router-controller: lists
    get:
      operationId: lists
      summary: Lists of a user
      description: |
        The Lists end point returns the lists of a given user
      responses:
        "200":
          description: An array of lists
          schema:
            type: array
            items:
              $ref: "#/definitions/List"
        "401":
          description: Unathorized access
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: newList
      description: |
        Creates a new list for the given user
      parameters:
        - name: name
          in: body
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/List"
        "401":
          description: Unathorized access
          schema:
            $ref: "#/definitions/ErrorResponse"
  /lists/{listId}:
    x-swagger-router-controller: lists
    post:
      operationId: newListElement
      description: |
        Adds a new element to the list
      parameters:
        - name: listId
          in: path
          required: true
          type: string
        - name: list-element
          in: body
          required: true
          schema:
            $ref: "#/definitions/Link"
      responses:
        "200":
          description: List element created
          schema:
            $ref: "#/definitions/List"
        "401":
          description: Unathorized access
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      operationId: editList
      description: |
        Modifies the given list and saves it to the database
      parameters:
        - name: listId
          in: path
          required: true
          type: string
        - name: list-element
          in: body
          required: true
          schema:
            $ref: "#/definitions/Link"
      responses:
        "200":
          description: List updated,
          schema:
            $ref: "#/definitions/List"
        "401":
          description: Unathorized access
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: updateList
      description: |
        Updates the given list and saves it to the database
      parameters:
        - name: listId
          in: path
          required: true
          type: string
        - name: list
          in: body
          required: true
          schema:
            $ref: "#/definitions/List"
      responses:
        "200":
          description: List updated
          schema:
            $ref: "#/definitions/List"
        "401":
          description: Unathorized access
          schema:
            $ref: "#/definitions/ErrorResponse"
  /search/tags:
    x-swagger-router-controller: search
    get:
      operationId: searchTags
      summary: Searching within the tags
      description: |
        This endpoint will returns the elements which has at least on of the tags
        passed in as query param(s)
      parameters:
        - name: tags
          in: query
          required: true
          type: string
          description:
            Words separated with comma
      responses:
        "200":
          description: An array of elements
          schema:
            type: array
            items:
              $ref: "#/definitions/Link"
        "401":
          description: Unathorized access
          schema:
            $ref: "#/definitions/ErrorResponse"
  /search/title:
    x-swagger-router-controller: search
    get:
      operationId: searchTitle
      summary: Searching within the titles
      description: |
        This endpoint will returns the element(s) with the given title
      parameters:
        - name: title
          in: query
          required: true
          type: string
      responses:
        "200":
          description: An array of elements
          schema:
            type: array
            items:
              $ref: "#/definitions/Link"
        "401":
          description: Unathorized access
          schema:
            $ref: "#/definitions/ErrorResponse"
  /search:
    x-swagger-router-controller: search
    post:
      operationId: searchTitleAndTags
      summary: Searching with tags and titles
      description: |
        This endpoint will returns the element(s) with the given title and tags
      parameters:
        - name: query-element
          in: body
          required: true
          schema:
            $ref: '#/definitions/QueryElement'
      responses:
        "200":
          description: An array of elements
          schema:
            type: array
            items:
              $ref: "#/definitions/Link"
        "401":
          description: Unathorized access
          schema:
            $ref: "#/definitions/ErrorResponse"
  /links:
    x-swagger-router-controller: links
    get:
      operationId: getLinks
      summary: Get the list of the links
      responses:
        "200":
          description: An array of links
          schema:
            type: array
            items:
              $ref: "#/definitions/Link"
        "401":
          description: Unathorized access
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: createLink
      summary: Creates a link
      parameters:
        - name: link
          in: body
          required: true
          schema:
            $ref: "#/definitions/Link"
      responses:
        "200":
          description: A link
          schema:
              $ref: "#/definitions/Link"
        "401":
          description: Unathorized access
          schema:
            $ref: "#/definitions/ErrorResponse"
  /links/{linkId}:
    x-swagger-router-controller: links
    patch:
      operationId: updateLink
      summary: Updates a link
      parameters:
        - name: linkId
          in: path
          required: true
          type: string
        - name: link
          in: body
          required: true
          schema:
            $ref: "#/definitions/Link"
      responses:
        "200":
          description: A link
          schema:
            $ref: "#/definitions/Link"
        "401":
          description: Unathorized access
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user:
    x-swagger-router-controller: user
    post:
      operationId: createUser
      summary: Creates a user
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: User created
        "409":
          description: Username, or email address in use
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Unexpected error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      operationId: updateUser
      summary: Update user preferences
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Successful update
        "401":
          description: Unathorized access
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/validate:
    x-swagger-router-controller: user
    post:
      operationId: verifyUserCredentials
      summary: Verifies user credentials
      description: |
        Used for form validation on the front end
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: No collision
        "409":
          description: Collision with a user in the database
          schema:
            $ref: "#/definitions/UserValidationErrorResponse"
  /user/login:
    x-swagger-router-controller: user
    post:
      operationId: loginUser
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: User logged in
          schema:
            $ref: "#/definitions/Token"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
  /verifyEmail/{token}:
    x-swagger-router-controller: email
    get:
      operationId: verifyEmail
      parameters:
        - name: token
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
  /resendVerificationEmail/{token}:
    x-swagger-router-controller: email
    get:
      operationId: resendVerificationEmail
      parameters:
        - name: token
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  QueryElement:
    properties:
      tags:
        type: array
        items:
          type: string
      title:
        type: string
  List:
    properties:
      id:
        type: string
      elements:
        type: array
        items:
          $ref: '#/definitions/Link'
  Link:
    required: ["title", "tags", "url"]
    properties:
      id:
        type: string
      title:
        type: string
      tags:
        type: array
        items:
          type: string
      url:
        type: string
  User:
    required: ["password"]
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  UserValidationErrorResponse:
    properties:
      username:
        type: boolean
      email:
        type: boolean
  Token:
    properties:
      token_type:
        type: string
      access_token:
        type: string
